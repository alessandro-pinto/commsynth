/** \page wiredbas Wired Network Synthesis Flow for Building Automation
 *
 * The design of a cost effective wired network for building automation
 * cannot overlook the actual network layout. More than 50% of the cost of
 * a network installation comes from the wiring cost. Therefore, the actual wiring
 * of a network is a first class quantity that must be taken into account
 * in any algorithm that minimizes cost. Obviously, the actual position of the node
 * is important to determine the path of a wire from a source to a destination node.
 * Finally, we need to capture the traffic properties that are generated by the node
 * towards the network. In control application, the traffic generated by nodes is usually
 * periodic. It means that a sensor will send packets that are regularly spaced in time.
 * Each node is characterized by a set of threads that can be sending or receiving data.
 * A thread is characterized by the period at which data are generated and sent, and the
 * message length in bits. A thread also contains other information like the name of the
 * thread, the id of the destination node, the name of the thread at the receiver etc. (cosi::Thread).
 * The quantities that are attached to a communication structure are the following (see \subpage wired_bas_package_quantities):
 *
 * 	- cosi::Type is the type of a node, e.g. "Sensor", "Actuator", "Controller"
 * 	- cosi::Ports are the ports of node.
 * 	- cosi::Position is the position of a node in the Euclidean space.
 * 	- cosi::ThreadSet is the set of send/receive threads on a node.
 * 	- cosi::TransferTable is used to define the path followed by packets in a network.
 *    The transfer table is simply a set of triples that map a source/destination pair
 *    to an output port.
 * 	- cosi::WiringPath is the actual wire layout represented as a list of pints in the
 *    Euclidean space.
 * 	- cosi::RealLatency is the maximu latency associate with an end-to-end constraint.
 *
 * We define three communication structures for specifying the inputs and the outputs of a synthesis algorithm 
 * (see \subpage wired_bas_package_commstruct):
 *
 * 	
 * 	- Specification
 * 	- Platform Instance
 *	- Implementation
 *
 * There are several components modeled in COSI that are describe in \subpage wired_bas_package_components.
 * 
 * \subpage wired_bas_package_compositionrules
 * \subpage wired_bas_package_environment
 * \subpage wired_bas_package_synthesis
 * \subpage wired_bas_package_io 
 *   
* 
*/